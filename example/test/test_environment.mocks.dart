// Mocks generated by Mockito 5.3.2 from annotations
// in eva_to_do_example/test/test_environment.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:eva/eva.dart' as _i2;
import 'package:eva_to_do_example/app/contracts/i_app_settings_repository.dart'
    as _i3;
import 'package:eva_to_do_example/app/contracts/i_to_do_repository.dart' as _i5;
import 'package:eva_to_do_example/app/entities/list_to_dos_filter.dart' as _i7;
import 'package:eva_to_do_example/app/entities/to_do_entity.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IAppSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAppSettingsRepository extends _i1.Mock
    implements _i3.IAppSettingsRepository {
  @override
  _i4.Future<_i2.Response<String>> set(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            key,
            value,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #set,
            [
              key,
              value,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #set,
            [
              key,
              value,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<String>>);
  @override
  _i4.Future<_i2.Response<String>> get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValue:
            _i4.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #get,
            [key],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #get,
            [key],
          ),
        )),
      ) as _i4.Future<_i2.Response<String>>);
}

/// A class which mocks [IToDoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIToDoRepository extends _i1.Mock implements _i5.IToDoRepository {
  @override
  _i4.Future<_i2.Response<Iterable<_i6.ToDoEntity>>> listToDos(
          _i7.ListToDosFilter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #listToDos,
          [filter],
        ),
        returnValue: _i4.Future<_i2.Response<Iterable<_i6.ToDoEntity>>>.value(
            _FakeResponse_0<Iterable<_i6.ToDoEntity>>(
          this,
          Invocation.method(
            #listToDos,
            [filter],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<Iterable<_i6.ToDoEntity>>>.value(
                _FakeResponse_0<Iterable<_i6.ToDoEntity>>(
          this,
          Invocation.method(
            #listToDos,
            [filter],
          ),
        )),
      ) as _i4.Future<_i2.Response<Iterable<_i6.ToDoEntity>>>);
  @override
  _i4.Future<_i2.Response<_i6.ToDoEntity>> getToDoById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getToDoById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Response<_i6.ToDoEntity>>.value(
            _FakeResponse_0<_i6.ToDoEntity>(
          this,
          Invocation.method(
            #getToDoById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i6.ToDoEntity>>.value(
                _FakeResponse_0<_i6.ToDoEntity>(
          this,
          Invocation.method(
            #getToDoById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Response<_i6.ToDoEntity>>);
  @override
  _i4.Future<_i2.Response<_i6.ToDoEntity>> saveToDo(_i6.ToDoEntity? toDo) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveToDo,
          [toDo],
        ),
        returnValue: _i4.Future<_i2.Response<_i6.ToDoEntity>>.value(
            _FakeResponse_0<_i6.ToDoEntity>(
          this,
          Invocation.method(
            #saveToDo,
            [toDo],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<_i6.ToDoEntity>>.value(
                _FakeResponse_0<_i6.ToDoEntity>(
          this,
          Invocation.method(
            #saveToDo,
            [toDo],
          ),
        )),
      ) as _i4.Future<_i2.Response<_i6.ToDoEntity>>);
  @override
  _i4.Future<_i2.Response<bool>> deleteToDoById(int? toDoId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteToDoById,
          [toDoId],
        ),
        returnValue: _i4.Future<_i2.Response<bool>>.value(_FakeResponse_0<bool>(
          this,
          Invocation.method(
            #deleteToDoById,
            [toDoId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<bool>>.value(_FakeResponse_0<bool>(
          this,
          Invocation.method(
            #deleteToDoById,
            [toDoId],
          ),
        )),
      ) as _i4.Future<_i2.Response<bool>>);
}
